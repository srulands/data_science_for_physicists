theme(aspect.ratio = 1) +
scale_y_log10()+
labs(x="Clone size", y="Probability")+
ggsave("../results/figures/clone_size_distribution_model.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size)) +
facet_wrap(~time, scales="free_x", nrow=1) +
stat_bin(aes(y=..density..), binwidth = 1, geom = "point", position="identity", pad=F,) +
#stat_bin(data = n.all[time %in% unique(clone.sizes[,time])], aes(x=clone.size, y=..density..), colour=my_palette[2], geom="line", binwidth=1) +
geom_line(data=n.hist[time %in% unique(clone.sizes$time) &is.finite(lower)], aes(x=clone.size, y=p), colour=my_palette[2])+
geom_ribbon(data=n.hist[time %in% unique(clone.sizes$time)], aes(ymin= lower -estimate + p ,ymax=upper- estimate+p), alpha=0.3, fill=my_palette[2], colour=NA)+
theme(aspect.ratio = 1) +
scale_y_log10()+
labs(x="Clone size", y="Probability")+
ggsave("../results/figures/clone_size_distribution_model.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size)) +
facet_wrap(~time, scales="free_x", nrow=1) +
stat_bin(aes(y=..density..), binwidth = 1, geom = "point", position="identity", pad=F,) +
#stat_bin(data = n.all[time %in% unique(clone.sizes[,time])], aes(x=clone.size, y=..density..), colour=my_palette[2], geom="line", binwidth=1) +
geom_line(data=n.hist[time %in% unique(clone.sizes$time) &is.finite(lower*upper)], aes(x=clone.size, y=p), colour=my_palette[2])+
geom_ribbon(data=n.hist[time %in% unique(clone.sizes$time)], aes(ymin= lower -estimate + p ,ymax=upper- estimate+p), alpha=0.3, fill=my_palette[2], colour=NA)+
theme(aspect.ratio = 1) +
scale_y_log10()+
labs(x="Clone size", y="Probability")+
ggsave("../results/figures/clone_size_distribution_model.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size, y = mean.comp.zone, colour=factor(time), fill=factor(time)))+
stat_summary(fun.y=mean, na.rm=T, geom="line")+
#stat_summary(fun.data = mean_cl_boot, geom="ribbon", alpha=0.1, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone", colour="Time (w)", fill="Time (w)")+
ggsave("../results/figures/clone_size_location_joint.pdf", width=fig.height*4/3, height=fig.height, useDingbats=F)
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ub.clone.sizes <- d[,.(clone.size=.N), by=.(time, ub.clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
lb.clone.sizes <- d[,.(clone.size=.N), by=.(time, lb.clone.ID,file.name,colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
export.clone.sizes <- clone.sizes[,.(clone.ID, time, clone.size)] %>%
dcast(clone.size~time, value.var="clone.size", fill=0)
fwrite(export.clone.sizes[,1],"legend.txt", sep="\t", col.names=F)
fwrite(data.table(time=colnames(export.clone.sizes[,2:ncol(export.clone.sizes)])),"times.txt", sep="\t", col.names=F)
fwrite(export.clone.sizes[,2:ncol(export.clone.sizes)], "data.txt", col.names=F, sep="\t")
clone.sizes[,.(avg.size=mean(clone.size))]
clone.sizes[,cumdist := my.ecdf(clone.size), by=time] %>%
.[,cumdist.ciu := ecdf.ks.CI(clone.size)$upper, by=time] %>%
.[,cumdist.cil := ecdf.ks.CI(clone.size)$lower, by=time]
cs.summ <- merge( clone.sizes[,.(mean.cs = mean(clone.size,na.rm=T)), by=.(time, file.name)],
merge(ub.clone.sizes[,.(ub.mean.cs = mean(clone.size,na.rm=T)), by=.(time,file.name)],
lb.clone.sizes[,.(lb.mean.cs = mean(clone.size,na.rm=T)), by=.(time,file.name)], by=c("time","file.name")),
by=c("time","file.name")) %>%
.[, .(
m.cs = mean(mean.cs),
se.cs = sd(mean.cs)/sqrt(.N),
ub = quantile(ub.mean.cs,0.68),
lb = quantile(lb.mean.cs, 0.32)),by=time]
ggplot(cs.summ, aes(x=time, y=m.cs))+
geom_smooth(method="lm", linetype="dashed", se=F, colour=my_palette[3])+
geom_errorbar(aes(ymin =lb, ymax=ub), alpha=1, width=0)+
geom_crossbar(aes(ymax = m.cs + se.cs, ymin = m.cs - se.cs), fill="white")+
labs(x="Time (d)",y="Avg. clone size")+
theme(aspect.ratio=3/4)+
ggsave("../results/figures/avg_tot_clonesize.pdf", width=fig.height*4/3, height=fig.height, useDingbats=F)
cs.summ.colour <- merge( clone.sizes[,.(mean.cs = mean(clone.size,na.rm=T)), by=.(time, file.name, colour)],
merge(ub.clone.sizes[,.(ub.mean.cs = mean(clone.size,na.rm=T)), by=.(time,file.name, colour)],
lb.clone.sizes[,.(lb.mean.cs = mean(clone.size,na.rm=T)), by=.(time,file.name, colour)], by=c("time","file.name", "colour")),
by=c("time","file.name","colour")) %>%
.[, .(
m.cs = mean(mean.cs),
se.cs = sd(mean.cs)/sqrt(.N),
ub = quantile(ub.mean.cs,0.68),
lb = quantile(lb.mean.cs, 0.32)),by=.(time, colour)]
ggplot(cs.summ.colour[!is.na(colour)], aes(x=factor(time), y=m.cs, colour=colour))+
#geom_smooth(method="lm", linetype="dashed", se=F, colour=my_palette[3])+
#geom_errorbar(aes(ymin =lb, ymax=ub), alpha=1, width=0)+
geom_crossbar(aes(ymax = m.cs + se.cs, ymin = m.cs - se.cs), fill="white", position="dodge")+
labs(x="Time (d)",y="Avg. clone size")+
theme(aspect.ratio=3/4)
ggplot(clone.sizes, aes(x=clone.size, y = mean.comp.zone#, colour=factor(time), fill=factor(time)))
))+
facet_wrap(~time, nrow=1)+
stat_summary(fun.y=mean, na.rm=T, geom="line")+
stat_summary(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size, y = mean.comp.zone, colour=factor(time), fill=factor(time)))+
stat_summary(fun.y=mean, na.rm=T, geom="line")+
#stat_summary(fun.data = mean_cl_boot, geom="ribbon", alpha=0.1, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone", colour="Time (w)", fill="Time (w)")+
ggsave("../results/figures/clone_size_location_joint.pdf", width=fig.height*4/3, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.com.zone, y =clone.size#, colour=factor(time), fill=factor(time)))
))+
stat_summary_bin(fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size#, colour=factor(time), fill=factor(time)))
))+
stat_summary_bin(fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size#, colour=factor(time), fill=factor(time)))
))+
stat_summary_bin(fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
stat_summary_bin(fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
#stat_summary_bin(fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=4/3)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Avg. clone size", y="Distance from PV", colour=NULL, fill=NULL)+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4, legend.position = "none")+
#ggpubr::stat_cor()+
labs(x="Avg. clone size", y="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size, y = mean.comp.zone#, colour=factor(time), fill=factor(time)))
))+
facet_wrap(~time, nrow=1)+
stat_summary(fun.y=mean, na.rm=T, geom="line")+
stat_summary(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1)+
ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone")+
ggsave("../results/figures/clone_size_location.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=clone.size, y = mean.comp.zone, colour=factor(time), fill=factor(time)))+
stat_summary(fun.y=mean, na.rm=T, geom="line")+
#stat_summary(fun.data = mean_cl_boot, geom="ribbon", alpha=0.1, colour=NA)+
theme(aspect.ratio=3/4)+
#ggpubr::stat_cor()+
labs(x="Clone size", y="Comp zone", colour="Time (w)", fill="Time (w)")+
ggsave("../results/figures/clone_size_location_joint.pdf", width=fig.height*4/3, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=3/4, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ggplot(clone.sizes, aes(x=sd.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=sd.comp.zone/mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
which R
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ub.clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, ub.clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
lb.clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, lb.clone.ID,file.name,colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
export.clone.sizes <- clone.sizes[,.(clone.ID, time, clone.size)] %>%
dcast(clone.size~time, value.var="clone.size", fill=0)
fwrite(export.clone.sizes[,1],"legend.txt", sep="\t", col.names=F)
fwrite(data.table(time=colnames(export.clone.sizes[,2:ncol(export.clone.sizes)])),"times.txt", sep="\t", col.names=F)
fwrite(export.clone.sizes[,2:ncol(export.clone.sizes)], "data.txt", col.names=F, sep="\t")
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary(data = ub.clone.sizes, fun.y=mean)+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary(data = ub.clone.sizes, fun.y=mean, geom="line")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dashed")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dashed")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dashed")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dashed")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = median(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=median, na.rm=T, geom="line")+
#stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = min(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ggplot(clone.sizes, aes(x=mean.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
min.comp.zone = min(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=.(time)]
ub.clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
min.comp.zone = min(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, ub.clone.ID, file.name, colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
lb.clone.sizes <- d[,.(clone.size=.N,
mean.comp.zone = mean(comp.zone),
min.comp.zone = min(comp.zone),
sd.comp.zone =sd(comp.zone)), by=.(time, lb.clone.ID,file.name,colour)] %>%
.[,resc.clone.size := clone.size / mean(clone.size,na.rm=T), by=time]
export.clone.sizes <- clone.sizes[,.(clone.ID, time, clone.size)] %>%
dcast(clone.size~time, value.var="clone.size", fill=0)
fwrite(export.clone.sizes[,1],"legend.txt", sep="\t", col.names=F)
fwrite(data.table(time=colnames(export.clone.sizes[,2:ncol(export.clone.sizes)])),"times.txt", sep="\t", col.names=F)
fwrite(export.clone.sizes[,2:ncol(export.clone.sizes)], "data.txt", col.names=F, sep="\t")
ggplot(clone.sizes, aes(x=min.comp.zone, y =clone.size, colour=factor(time), fill=factor(time)))+
facet_wrap(~time, nrow=1)+
stat_summary_bin(aes(group=1),fun.y=mean, na.rm=T, geom="line")+
stat_summary_bin(fun.data = mean_cl_boot, geom="ribbon", alpha=0.2, colour=NA)+
stat_summary_bin(data = ub.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
stat_summary_bin(data = lb.clone.sizes, fun.y=mean, geom="line", linetype="dotted")+
theme(aspect.ratio=1, legend.position = "none")+
#ggpubr::stat_cor()+
labs(y="Avg. clone size", x="Distance from PV")+
ggsave("../results/figures/clone_size_min_location_inverse.pdf", width=fig.height*7, height=fig.height, useDingbats=F)
d[,print(ggplot(.SD,
aes(x=x,y=y,colour=comp.zone, fill=factor(colour))) +
geom_point(size=0.5)+
#scale_colour_hue()+
#scale_fill_hue()+
ggalt::geom_encircle(aes(group=paste(cluster, colour)), s_shape=0.5,expand=0.01,spread=0.02,alpha=0.2)+
theme(legend.position="none")+coord_fixed()+
ggtitle(basename(.BY$file.name))+
ggsave(paste("../results/figures/clustering/clusters_",basename(.BY$file.name),".pdf"),height=fig.height, width=fig.height*2, useDingbats=F)), by=.(file.name)]
d[,print(ggplot(.SD,
aes(x=x,y=y,colour=comp.zone, fill=comp.zone)) +
geom_point(size=0.5)+
#scale_colour_hue()+
#scale_fill_hue()+
ggalt::geom_encircle(aes(group=paste(cluster, colour)), s_shape=0.5,expand=0.01,spread=0.02,alpha=0.2)+
theme(legend.position="none")+coord_fixed()+
ggtitle(basename(.BY$file.name))+
ggsave(paste("../results/figures/clustering/clusters_",basename(.BY$file.name),".pdf"),height=fig.height, width=fig.height*2, useDingbats=F)), by=.(file.name)]
d[,print(ggplot(.SD,
aes(x=x,y=y,colour=factor(colour), fill=factor(colour))) +
geom_point(size=0.5)+
#scale_colour_hue()+
#scale_fill_hue()+
ggalt::geom_encircle(aes(group=paste(cluster, colour)), s_shape=0.5,expand=0.01,spread=0.02,alpha=0.2)+
theme(legend.position="none")+coord_fixed()+
ggtitle(basename(.BY$file.name))+
ggsave(paste("../results/figures/clustering/clusters_",basename(.BY$file.name),".pdf"),height=fig.height, width=fig.height*2, useDingbats=F)), by=.(file.name)]
library(data.table)
library(magrittr)
library(ggplot2)
library(org.Mm.eg.db)
source("../../../share/source/sequencing-analysis/R/ggplot_theme.R")
#source("../../../share/source/sequencing-analysis/R/go_analysis_tools.R")
source("../../../share/source/sequencing-analysis/R/gsea.R")
#source("../../../share/source/sequencing-analysis/R/gene.name.conversion.R")
fig.height = 2.5
my.corr <- function(x,y){
res <- try(cor.test(x,y, method="p"), silent=T)
if(class(res)=="try-error"){
#print(res)
return(list(corr = NA_real_,pval = NA_real_))
} else {
return(list(corr = res$estimate ,pval = res$p.value))
}
ts_hclust <- function(tt, xx, ID, ngroups) {
tmp <- data.table(t = tt, x = xx, id = ID)
tmp.cast <- tmp %>% dcast(id~t, value.var = "x")
id.tmp <- tmp.cast$id
#d <- dist(tmp.cast[,id:=NULL]) #distance between rows
d <- dist(2-Hmisc::rcorr(as.matrix(tmp.cast[,id:=NULL]),type="pearson")$r)
c <- cutree(hclust(d), k = ngroups)
#Expand c to match id
return(merge(tmp[,id:=id.tmp], data.table(id = id.tmp, cluster = c), by="id")[,cluster] )
}
tidy_dtwclust <- function(tt, xx, ID, ngroups) {
tmp <- data.table(t = tt, x = xx, id = ID)
tmp.cast <- tmp %>% dcast(id~t, value.var = "x")
id.tmp <- tmp.cast$id
#d <- dist(tmp.cast[,id:=NULL]) #distance between rows
tslist <- dtwclust::tslist(as.matrix(tmp.cast[,id:=NULL]))
tsc <- dtwclust::tsclust(series = tslist, distance = "sbd", k=ngroups, trace=T,  centroid = "shape")
c <- tsc@cluster
#Expand c to match id - there must be a mistake here as we have fragmented time series
return(merge(tmp[,id:=id.tmp], data.table(id = id.tmp, cluster = c), by="id")[,cluster] )
}
#tidt_hclust(c(1:10,1:10), c(2:11, 11:20), c(rep("a",10), rep("b",10)),2)
data <- as.data.table(readxl::read_xlsx("../../exp_data/20190508 ES TS Processed.xlsx"))
cols <- names(data)
measure.vars <- cols[grepl(pattern = "Unique peptides ", x = cols, fixed = T) ]
id.cols <- c("Protein IDs","Majority protein IDs","Protein names", "Gene names","Q-value")
cols <- c(id.cols,measure.vars)
d <- data[,..cols] %>%
melt(measure.vars = measure.vars, variable.name = "sample.id", value.name ="uniq.peptides") %>%
.[, time.str := tstrsplit(as.character(sample.id),"_", keep=2L)] %>%
.[, time := as.numeric(gsub("h","", time.str))] %>%
.[, condition.str := tstrsplit(as.character(sample.id),c(" "), keep=3L)] %>%
.[, condition.str := tstrsplit(condition.str, c("_"), keep=1L)] %>%
.[stringr::str_detect(condition.str, "[123]"), condition:= "Pausing"] %>%
.[stringr::str_detect(condition.str, "[456]"), condition:= "Release"] %>%
.[,cell.line := stringr::str_sub(condition.str,1,2)] %>%
.[, replicate := substr(condition.str,3,3)] %>%
setnames(.,make.names(names(.))) %>%
.[!is.na(Protein.IDs)]
es.cols <- cols[stringr::str_detect(cols,"TS") & stringr::str_detect(tstrsplit(as.character(cols),c(" "), keep=3L),"[4,5,6]")]
dr.data <- data[`Protein IDs` %in% var.proteins[cell.line=="TS" & condition=="Pausing", Protein.IDs], ..es.cols] %>% .[,1:ncol(.)]
es.cols <- cols[stringr::str_detect(cols,"TS") & stringr::str_detect(tstrsplit(as.character(cols),c(" "), keep=3L),"[4,5,6]")]
dr.data <- data[`Protein IDs` %in% var.proteins[cell.line=="TS" & condition=="Pausing", Protein.IDs], ..es.cols] %>% .[,1:ncol(.)]
d.summ <- d[ ,.(avg.up =mean(uniq.peptides,na.rm=T),
sd.up = sd(uniq.peptides, na.rm=T)), by=.(cell.line,condition, time, Protein.IDs, Gene.names)] %>%
.[, scaled.up := scale(avg.up), by=.(cell.line,condition, Protein.IDs) ]
var.proteins <- d.summ[,.(v = var(avg.up)), by = .(cell.line,Protein.IDs,condition)] %>%
.[, .SD[frank(-v)<500],by=.(condition, cell.line)]
non.constant.proteins <- d.summ[,.SD[length(unique(avg.up))], by=.(condition, cell.line)]
